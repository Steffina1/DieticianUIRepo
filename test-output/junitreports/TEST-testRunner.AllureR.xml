<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="EzhilVanans-MBP.lan" failures="0" tests="24" name="testRunner.AllureR" time="0.562" errors="1" timestamp="2022-06-13T17:02:57 CDT" skipped="0">
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.008"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.011"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.020"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.017"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.015"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.012"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.011"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.023"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.018"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.203"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.050">
    <error message="The step &#039;User clicks on search with &lt;name phrase&gt; into name filter box  //User gets data from data sheet with &lt;testId&gt; and &lt;sheetname&gt;&#039; is undefined.
You can implement this step using the snippet(s) below:

@When(&quot;User clicks on search with &lt;name phrase&gt; into name filter box  \\/\\/User gets data from data sheet with &lt;testId&gt; and &lt;sheetname&gt;&quot;)
public void user_clicks_on_search_with_name_phrase_into_name_filter_box_user_gets_data_from_data_sheet_with_test_id_and_sheetname() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User clicks on search with <name phrase> into name filter box  //User gets data from data sheet with <testId> and <sheetname>' is undefined.
You can implement this step using the snippet(s) below:

@When("User clicks on search with <name phrase> into name filter box  \\/\\/User gets data from data sheet with <testId> and <sheetname>")
public void user_clicks_on_search_with_name_phrase_into_name_filter_box_user_gets_data_from_data_sheet_with_test_id_and_sheetname() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:129)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:129)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at jdk.internal.reflect.GeneratedMethodAccessor43.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.024"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.011"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.009"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.014"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.009"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.010"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.012"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.014"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.013"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.017"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.016"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.012"/>
  <system-out/>
  <testcase classname="testRunner.AllureR" name="runScenario" time="0.013"/>
  <system-out/>
</testsuite> <!-- testRunner.AllureR -->
